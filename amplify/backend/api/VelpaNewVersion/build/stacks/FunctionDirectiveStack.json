{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "An auto-generated nested stack.",
    "Metadata": {},
    "Parameters": {
        "DynamoDBModelTableReadIOPS": {
            "Type": "Number",
            "Description": "The number of read IOPS the table should support.",
            "Default": 5
        },
        "DynamoDBModelTableWriteIOPS": {
            "Type": "Number",
            "Description": "The number of write IOPS the table should support.",
            "Default": 5
        },
        "DynamoDBBillingMode": {
            "Type": "String",
            "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes.",
            "Default": "PAY_PER_REQUEST",
            "AllowedValues": [
                "PAY_PER_REQUEST",
                "PROVISIONED"
            ]
        },
        "DynamoDBEnablePointInTimeRecovery": {
            "Type": "String",
            "Description": "Whether to enable Point in Time Recovery on the table",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "DynamoDBEnableServerSideEncryption": {
            "Type": "String",
            "Description": "Enable server side encryption powered by KMS.",
            "Default": "true",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "AppSyncApiName": {
            "Type": "String",
            "Description": "The name of the AppSync API",
            "Default": "AppSyncSimpleTransform"
        },
        "APIKeyExpirationEpoch": {
            "Type": "Number",
            "Description": "The epoch time in seconds when the API Key should expire. Setting this to 0 will default to 7 days from the deployment date. Setting this to -1 will not create an API Key.",
            "Default": 0,
            "MinValue": -1
        },
        "CreateAPIKey": {
            "Type": "Number",
            "Description": "The boolean value to control if an API Key will be created or not. The value of the property is automatically set by the CLI. If the value is set to 0 no API Key will be created.",
            "Default": 0,
            "MinValue": 0,
            "MaxValue": 1
        },
        "AuthCognitoUserPoolId": {
            "Type": "String",
            "Description": "The id of an existing User Pool to connect. If this is changed, a user pool will not be created for you.",
            "Default": "NONE"
        },
        "env": {
            "Type": "String",
            "Description": "The environment name. e.g. Dev, Test, or Production",
            "Default": "NONE"
        },
        "S3DeploymentBucket": {
            "Type": "String",
            "Description": "The S3 bucket containing all deployment assets for the project."
        },
        "S3DeploymentRootKey": {
            "Type": "String",
            "Description": "An S3 key relative to the S3DeploymentBucket that points to the root of the deployment directory."
        },
        "AppSyncApiId": {
            "Type": "String",
            "Description": "The id of the AppSync API associated with this project."
        },
        "GetAttGraphQLAPIApiId": {
            "Type": "String",
            "Description": "Auto-generated parameter that forwards Fn.GetAtt(GraphQLAPI, ApiId) through to nested stacks."
        }
    },
    "Resources": {
        "CreatePaymentIntentLambdaDataSourceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "CreatePaymentIntente99e",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "CreatePaymentIntente99e",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "InvokeLambdaFunction",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": {
                                        "Fn::If": [
                                            "HasEnvironmentParameter",
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreatePaymentIntent-${env}",
                                                    {
                                                        "env": {
                                                            "Ref": "env"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreatePaymentIntent",
                                                    {}
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CreatePaymentIntentLambdaDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "CreatePaymentIntentLambdaDataSource",
                "Type": "AWS_LAMBDA",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "CreatePaymentIntentLambdaDataSourceRole",
                        "Arn"
                    ]
                },
                "LambdaConfig": {
                    "LambdaFunctionArn": {
                        "Fn::If": [
                            "HasEnvironmentParameter",
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreatePaymentIntent-${env}",
                                    {
                                        "env": {
                                            "Ref": "env"
                                        }
                                    }
                                ]
                            },
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreatePaymentIntent",
                                    {}
                                ]
                            }
                        ]
                    }
                }
            },
            "DependsOn": "CreatePaymentIntentLambdaDataSourceRole"
        },
        "InvokeCreatePaymentIntentLambdaDataSource": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "InvokeCreatePaymentIntentLambdaDataSource",
                "DataSourceName": "CreatePaymentIntentLambdaDataSource",
                "FunctionVersion": "2018-05-29",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeCreatePaymentIntentLambdaDataSource",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeCreatePaymentIntentLambdaDataSource",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "CreatePaymentIntentLambdaDataSource"
        },
        "MutationcreatePaymentIntentResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "TypeName": "Mutation",
                "FieldName": "createPaymentIntent",
                "Kind": "PIPELINE",
                "PipelineConfig": {
                    "Functions": [
                        {
                            "Fn::GetAtt": [
                                "InvokeCreatePaymentIntentLambdaDataSource",
                                "FunctionId"
                            ]
                        }
                    ]
                },
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "createPaymentIntent",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "createPaymentIntent",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "InvokeCreatePaymentIntentLambdaDataSource"
        },
        "CreateStripeAcountLambdaDataSourceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "CreateStripeAcount04ff",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "CreateStripeAcount04ff",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "InvokeLambdaFunction",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": {
                                        "Fn::If": [
                                            "HasEnvironmentParameter",
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreateStripeAcount-${env}",
                                                    {
                                                        "env": {
                                                            "Ref": "env"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreateStripeAcount",
                                                    {}
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CreateStripeAcountLambdaDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "CreateStripeAcountLambdaDataSource",
                "Type": "AWS_LAMBDA",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "CreateStripeAcountLambdaDataSourceRole",
                        "Arn"
                    ]
                },
                "LambdaConfig": {
                    "LambdaFunctionArn": {
                        "Fn::If": [
                            "HasEnvironmentParameter",
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreateStripeAcount-${env}",
                                    {
                                        "env": {
                                            "Ref": "env"
                                        }
                                    }
                                ]
                            },
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreateStripeAcount",
                                    {}
                                ]
                            }
                        ]
                    }
                }
            },
            "DependsOn": "CreateStripeAcountLambdaDataSourceRole"
        },
        "InvokeCreateStripeAcountLambdaDataSource": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "InvokeCreateStripeAcountLambdaDataSource",
                "DataSourceName": "CreateStripeAcountLambdaDataSource",
                "FunctionVersion": "2018-05-29",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeCreateStripeAcountLambdaDataSource",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeCreateStripeAcountLambdaDataSource",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "CreateStripeAcountLambdaDataSource"
        },
        "MutationCreateStripeAcountResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "TypeName": "Mutation",
                "FieldName": "CreateStripeAcount",
                "Kind": "PIPELINE",
                "PipelineConfig": {
                    "Functions": [
                        {
                            "Fn::GetAtt": [
                                "InvokeCreateStripeAcountLambdaDataSource",
                                "FunctionId"
                            ]
                        }
                    ]
                },
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "CreateStripeAcount",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "CreateStripeAcount",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "InvokeCreateStripeAcountLambdaDataSource"
        },
        "LoginLinkStripeLambdaDataSourceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "LoginLinkStripe3d72",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "LoginLinkStripe3d72",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "InvokeLambdaFunction",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": {
                                        "Fn::If": [
                                            "HasEnvironmentParameter",
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginLinkStripe-${env}",
                                                    {
                                                        "env": {
                                                            "Ref": "env"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginLinkStripe",
                                                    {}
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "LoginLinkStripeLambdaDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "LoginLinkStripeLambdaDataSource",
                "Type": "AWS_LAMBDA",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "LoginLinkStripeLambdaDataSourceRole",
                        "Arn"
                    ]
                },
                "LambdaConfig": {
                    "LambdaFunctionArn": {
                        "Fn::If": [
                            "HasEnvironmentParameter",
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginLinkStripe-${env}",
                                    {
                                        "env": {
                                            "Ref": "env"
                                        }
                                    }
                                ]
                            },
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginLinkStripe",
                                    {}
                                ]
                            }
                        ]
                    }
                }
            },
            "DependsOn": "LoginLinkStripeLambdaDataSourceRole"
        },
        "InvokeLoginLinkStripeLambdaDataSource": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "InvokeLoginLinkStripeLambdaDataSource",
                "DataSourceName": "LoginLinkStripeLambdaDataSource",
                "FunctionVersion": "2018-05-29",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeLoginLinkStripeLambdaDataSource",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeLoginLinkStripeLambdaDataSource",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "LoginLinkStripeLambdaDataSource"
        },
        "MutationloginLinkStripeResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "TypeName": "Mutation",
                "FieldName": "loginLinkStripe",
                "Kind": "PIPELINE",
                "PipelineConfig": {
                    "Functions": [
                        {
                            "Fn::GetAtt": [
                                "InvokeLoginLinkStripeLambdaDataSource",
                                "FunctionId"
                            ]
                        }
                    ]
                },
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "loginLinkStripe",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "loginLinkStripe",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "InvokeLoginLinkStripeLambdaDataSource"
        },
        "RetrieveBalanceStripeLambdaDataSourceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "RetrieveBalanceStripe964b",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "RetrieveBalanceStripe964b",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "InvokeLambdaFunction",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": {
                                        "Fn::If": [
                                            "HasEnvironmentParameter",
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:RetrieveBalanceStripe-${env}",
                                                    {
                                                        "env": {
                                                            "Ref": "env"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:RetrieveBalanceStripe",
                                                    {}
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "RetrieveBalanceStripeLambdaDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "RetrieveBalanceStripeLambdaDataSource",
                "Type": "AWS_LAMBDA",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "RetrieveBalanceStripeLambdaDataSourceRole",
                        "Arn"
                    ]
                },
                "LambdaConfig": {
                    "LambdaFunctionArn": {
                        "Fn::If": [
                            "HasEnvironmentParameter",
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:RetrieveBalanceStripe-${env}",
                                    {
                                        "env": {
                                            "Ref": "env"
                                        }
                                    }
                                ]
                            },
                            {
                                "Fn::Sub": [
                                    "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:RetrieveBalanceStripe",
                                    {}
                                ]
                            }
                        ]
                    }
                }
            },
            "DependsOn": "RetrieveBalanceStripeLambdaDataSourceRole"
        },
        "InvokeRetrieveBalanceStripeLambdaDataSource": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Name": "InvokeRetrieveBalanceStripeLambdaDataSource",
                "DataSourceName": "RetrieveBalanceStripeLambdaDataSource",
                "FunctionVersion": "2018-05-29",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeRetrieveBalanceStripeLambdaDataSource",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/pipelineFunctions/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "InvokeRetrieveBalanceStripeLambdaDataSource",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "RetrieveBalanceStripeLambdaDataSource"
        },
        "MutationRetrieveBalanceStripeResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "TypeName": "Mutation",
                "FieldName": "RetrieveBalanceStripe",
                "Kind": "PIPELINE",
                "PipelineConfig": {
                    "Functions": [
                        {
                            "Fn::GetAtt": [
                                "InvokeRetrieveBalanceStripeLambdaDataSource",
                                "FunctionId"
                            ]
                        }
                    ]
                },
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "RetrieveBalanceStripe",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Mutation",
                                        "RetrieveBalanceStripe",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": "InvokeRetrieveBalanceStripeLambdaDataSource"
        }
    },
    "Outputs": {},
    "Mappings": {},
    "Conditions": {
        "ShouldUsePayPerRequestBilling": {
            "Fn::Equals": [
                {
                    "Ref": "DynamoDBBillingMode"
                },
                "PAY_PER_REQUEST"
            ]
        },
        "ShouldUsePointInTimeRecovery": {
            "Fn::Equals": [
                {
                    "Ref": "DynamoDBEnablePointInTimeRecovery"
                },
                "true"
            ]
        },
        "ShouldUseServerSideEncryption": {
            "Fn::Equals": [
                {
                    "Ref": "DynamoDBEnableServerSideEncryption"
                },
                "true"
            ]
        },
        "ShouldCreateAPIKey": {
            "Fn::Equals": [
                {
                    "Ref": "CreateAPIKey"
                },
                1
            ]
        },
        "APIKeyExpirationEpochIsPositive": {
            "Fn::And": [
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "APIKeyExpirationEpoch"
                                },
                                -1
                            ]
                        }
                    ]
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "APIKeyExpirationEpoch"
                                },
                                0
                            ]
                        }
                    ]
                }
            ]
        },
        "HasEnvironmentParameter": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "env"
                        },
                        "NONE"
                    ]
                }
            ]
        }
    }
}