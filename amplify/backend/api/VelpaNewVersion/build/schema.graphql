type Comentario @aws_iam @aws_api_key {
  id: ID!
  calificacion: Float!
  resena: String
  creadorID: ID!
  evaluadoID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type SolicitudGuia @aws_iam @aws_api_key {
  id: ID!
  creadorID: ID!
  evaluadorID: ID
  status: solicitudAprovada
  comentarios: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  AventurasAVerificar(aventuraID: ModelIDKeyConditionInput, filter: ModelSolicitudAventuraFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelSolicitudAventuraConnection @aws_iam @aws_api_key
  evaluador: Usuario @aws_iam @aws_api_key
  Usuario: Usuario! @aws_iam @aws_api_key
}

enum solicitudAprovada {
  aproved
  pending
  rejected
}

type SolicitudAventura @aws_iam @aws_api_key {
  id: ID!
  aventuraID: ID!
  solicitudID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  solicitud: SolicitudGuia! @aws_iam @aws_api_key
  aventura: Aventura! @aws_iam @aws_api_key
}

type Usuario @aws_iam @aws_api_key {
  id: ID!
  nombre: String
  apellido: String
  foto: String
  nickname: String!
  calificacion: Float
  descripcion: String
  comentarios: [String]
  tipo: tipoUsuario
  selfie: String
  INE: [String]
  licencia: [String]
  comentariosAdicionales: String
  telefono: String
  capacidadMaxima: Int
  placaVehiculos: [String]
  tarjetaCirculacion: String
  certificaciones: [String]
  sitioWeb: String
  redSocial: String
  stripeID: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  evaluaciones(filter: ModelComentarioFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelComentarioConnection @aws_iam @aws_api_key
  solicitudes(filter: ModelSolicitudGuiaFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelSolicitudGuiaConnection @aws_iam @aws_api_key
  aventurasAutorizadas(aventuraID: ModelIDKeyConditionInput, filter: ModelUsuarioAventuraFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUsuarioAventuraConnection @aws_iam @aws_api_key
  reservaciones(filter: ModelReservacionesFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelReservacionesConnection @aws_iam @aws_api_key
  fechas(filter: ModelFechaFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFechaConnection @aws_iam @aws_api_key
  messages(filter: ModelMessageFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelMessageConnection @aws_iam @aws_api_key
  chatRooms(chatroomID: ModelIDKeyConditionInput, filter: ModelChatRoomUsuarioFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelChatRoomUsuarioConnection @aws_iam @aws_api_key
}

enum tipoUsuario {
  agencia
  guiaIndividual
}

type UsuarioAventura @aws_iam @aws_api_key {
  id: ID!
  aventuraID: ID!
  usuarioID: ID!
  bloqueado: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  usuario: Usuario! @aws_iam @aws_api_key
  aventura: Aventura! @aws_iam @aws_api_key
}

type Aventura @aws_iam @aws_api_key {
  id: ID!
  titulo: String!
  imagenFondo: String!
  imagenDetalle: [String!]!
  precioMin: Int!
  precioMax: Int!
  duracion: String!
  descripcionCorta: String!
  descripcionLarga: String!
  materialObligatorio: [String!]
  materialOpcional: [String!]
  materialAcampada: [String!]
  alimentacion: [String!]
  materialIncluido: [String!]
  dificultad: Float!
  precioVIP: Int
  descripcionVIP: String
  fechaInicialDisponible: String
  fechaFinalDisponible: String
  categoriaID: ID
  ubicacionNombre: String
  ubicacionLink: String
  comision: Float!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  usuariosAutorizados(usuarioID: ModelIDKeyConditionInput, filter: ModelUsuarioAventuraFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUsuarioAventuraConnection @aws_iam @aws_api_key
  Fechas(filter: ModelFechaFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFechaConnection @aws_iam @aws_api_key
}

type Reservaciones @aws_iam @aws_api_key {
  id: ID!
  total: Float!
  comisionPorPersona: Float!
  personas: Int!
  tercera: Int
  adultos: Int
  ninos: Int
  fechaID: ID!
  usuarioID: ID!
  idPago: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  usuario: Usuario! @aws_iam @aws_api_key
}

type Fecha @aws_iam @aws_api_key {
  id: ID!
  personasTotales: Int!
  fechaInicial: String!
  fechaFinal: String!
  precio: Int!
  comision: Float!
  aventuraID: ID!
  guiaID: ID!
  itinerario: [AWSJSON]
  ubicacionNombre: String
  ubicacionLink: String
  denyTercera: Boolean
  denyNinos: Boolean
  materialObligatorio: [String]
  materialOpcional: [String]
  materialAcampada: [String]
  alimentacion: [String]
  materialIncluido: [String]
  chatroomID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  Guia(filter: ModelUsuarioFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUsuarioConnection @aws_iam @aws_api_key
  Reservaciones(filter: ModelReservacionesFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelReservacionesConnection @aws_iam @aws_api_key
  chatroom: ChatRoom @aws_iam @aws_api_key
}

type Categoria @aws_iam @aws_api_key {
  id: ID!
  titulo: String!
  foto: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  Aventuras(filter: ModelAventuraFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelAventuraConnection @aws_iam @aws_api_key
}

type Subscription {
  onUpdateFechasByAventura(aventuraID: String!): Fecha @aws_subscribe(mutations: ["createFecha", "updateFecha"])
  onDeleteFechasByAventura(aventuraID: String!): Fecha @aws_subscribe(mutations: ["deleteFecha"])
  onCreateReservacionesByFecha(fechaID: String!): Reservaciones @aws_subscribe(mutations: ["createReservaciones"])
  onDeleteReservacionesByFecha(fechaID: String!): Reservaciones @aws_subscribe(mutations: ["deleteReservaciones"])
  onCreateMensajeByChatroom(chatroomID: String!): Message @aws_subscribe(mutations: ["createMessage"])
  onUpdateChatRoomByID(id: String!): ChatRoom @aws_subscribe(mutations: ["createChatRoom", "updateChatRoom"])
  onCreateComentario: Comentario @aws_subscribe(mutations: ["createComentario"]) @aws_api_key @aws_iam
  onUpdateComentario: Comentario @aws_subscribe(mutations: ["updateComentario"]) @aws_api_key @aws_iam
  onDeleteComentario: Comentario @aws_subscribe(mutations: ["deleteComentario"]) @aws_api_key @aws_iam
  onCreateSolicitudGuia: SolicitudGuia @aws_subscribe(mutations: ["createSolicitudGuia"]) @aws_api_key @aws_iam
  onUpdateSolicitudGuia: SolicitudGuia @aws_subscribe(mutations: ["updateSolicitudGuia"]) @aws_api_key @aws_iam
  onDeleteSolicitudGuia: SolicitudGuia @aws_subscribe(mutations: ["deleteSolicitudGuia"]) @aws_api_key @aws_iam
  onCreateSolicitudAventura: SolicitudAventura @aws_subscribe(mutations: ["createSolicitudAventura"]) @aws_api_key @aws_iam
  onUpdateSolicitudAventura: SolicitudAventura @aws_subscribe(mutations: ["updateSolicitudAventura"]) @aws_api_key @aws_iam
  onDeleteSolicitudAventura: SolicitudAventura @aws_subscribe(mutations: ["deleteSolicitudAventura"]) @aws_api_key @aws_iam
  onCreateUsuario: Usuario @aws_subscribe(mutations: ["createUsuario"]) @aws_api_key @aws_iam
  onUpdateUsuario: Usuario @aws_subscribe(mutations: ["updateUsuario"]) @aws_api_key @aws_iam
  onDeleteUsuario: Usuario @aws_subscribe(mutations: ["deleteUsuario"]) @aws_api_key @aws_iam
  onCreateUsuarioAventura: UsuarioAventura @aws_subscribe(mutations: ["createUsuarioAventura"]) @aws_api_key @aws_iam
  onUpdateUsuarioAventura: UsuarioAventura @aws_subscribe(mutations: ["updateUsuarioAventura"]) @aws_api_key @aws_iam
  onDeleteUsuarioAventura: UsuarioAventura @aws_subscribe(mutations: ["deleteUsuarioAventura"]) @aws_api_key @aws_iam
  onCreateAventura: Aventura @aws_subscribe(mutations: ["createAventura"]) @aws_api_key @aws_iam
  onUpdateAventura: Aventura @aws_subscribe(mutations: ["updateAventura"]) @aws_api_key @aws_iam
  onDeleteAventura: Aventura @aws_subscribe(mutations: ["deleteAventura"]) @aws_api_key @aws_iam
  onCreateReservaciones: Reservaciones @aws_subscribe(mutations: ["createReservaciones"]) @aws_api_key @aws_iam
  onUpdateReservaciones: Reservaciones @aws_subscribe(mutations: ["updateReservaciones"]) @aws_api_key @aws_iam
  onDeleteReservaciones: Reservaciones @aws_subscribe(mutations: ["deleteReservaciones"]) @aws_api_key @aws_iam
  onCreateFecha: Fecha @aws_subscribe(mutations: ["createFecha"]) @aws_api_key @aws_iam
  onUpdateFecha: Fecha @aws_subscribe(mutations: ["updateFecha"]) @aws_api_key @aws_iam
  onDeleteFecha: Fecha @aws_subscribe(mutations: ["deleteFecha"]) @aws_api_key @aws_iam
  onCreateCategoria: Categoria @aws_subscribe(mutations: ["createCategoria"]) @aws_api_key @aws_iam
  onUpdateCategoria: Categoria @aws_subscribe(mutations: ["updateCategoria"]) @aws_api_key @aws_iam
  onDeleteCategoria: Categoria @aws_subscribe(mutations: ["deleteCategoria"]) @aws_api_key @aws_iam
  onCreateMessage: Message @aws_subscribe(mutations: ["createMessage"]) @aws_api_key @aws_iam
  onUpdateMessage: Message @aws_subscribe(mutations: ["updateMessage"]) @aws_api_key @aws_iam
  onDeleteMessage: Message @aws_subscribe(mutations: ["deleteMessage"]) @aws_api_key @aws_iam
  onCreateChatRoom: ChatRoom @aws_subscribe(mutations: ["createChatRoom"]) @aws_api_key @aws_iam
  onUpdateChatRoom: ChatRoom @aws_subscribe(mutations: ["updateChatRoom"]) @aws_api_key @aws_iam
  onDeleteChatRoom: ChatRoom @aws_subscribe(mutations: ["deleteChatRoom"]) @aws_api_key @aws_iam
  onCreateChatRoomUsuario: ChatRoomUsuario @aws_subscribe(mutations: ["createChatRoomUsuario"]) @aws_api_key @aws_iam
  onUpdateChatRoomUsuario: ChatRoomUsuario @aws_subscribe(mutations: ["updateChatRoomUsuario"]) @aws_api_key @aws_iam
  onDeleteChatRoomUsuario: ChatRoomUsuario @aws_subscribe(mutations: ["deleteChatRoomUsuario"]) @aws_api_key @aws_iam
}

type Mutation {
  createPaymentIntent(amount: Int!, comision: Float!, destinationStripeID: String!): PaymentIntent!
  CreateStripeAcount(email: String, sub: ID!, url: String!): AcountResult!
  loginLinkStripe(stripeID: String!): AcountResult
  RetrieveBalanceStripe(stripeID: String!): RetrieveBalanceStripe
  createComentario(input: CreateComentarioInput!, condition: ModelComentarioConditionInput): Comentario @aws_api_key @aws_iam
  updateComentario(input: UpdateComentarioInput!, condition: ModelComentarioConditionInput): Comentario @aws_api_key @aws_iam
  deleteComentario(input: DeleteComentarioInput!, condition: ModelComentarioConditionInput): Comentario @aws_api_key @aws_iam
  createSolicitudGuia(input: CreateSolicitudGuiaInput!, condition: ModelSolicitudGuiaConditionInput): SolicitudGuia @aws_api_key @aws_iam
  updateSolicitudGuia(input: UpdateSolicitudGuiaInput!, condition: ModelSolicitudGuiaConditionInput): SolicitudGuia @aws_api_key @aws_iam
  deleteSolicitudGuia(input: DeleteSolicitudGuiaInput!, condition: ModelSolicitudGuiaConditionInput): SolicitudGuia @aws_api_key @aws_iam
  createSolicitudAventura(input: CreateSolicitudAventuraInput!, condition: ModelSolicitudAventuraConditionInput): SolicitudAventura @aws_api_key @aws_iam
  updateSolicitudAventura(input: UpdateSolicitudAventuraInput!, condition: ModelSolicitudAventuraConditionInput): SolicitudAventura @aws_api_key @aws_iam
  deleteSolicitudAventura(input: DeleteSolicitudAventuraInput!, condition: ModelSolicitudAventuraConditionInput): SolicitudAventura @aws_api_key @aws_iam
  createUsuario(input: CreateUsuarioInput!, condition: ModelUsuarioConditionInput): Usuario @aws_api_key @aws_iam
  updateUsuario(input: UpdateUsuarioInput!, condition: ModelUsuarioConditionInput): Usuario @aws_api_key @aws_iam
  deleteUsuario(input: DeleteUsuarioInput!, condition: ModelUsuarioConditionInput): Usuario @aws_api_key @aws_iam
  createUsuarioAventura(input: CreateUsuarioAventuraInput!, condition: ModelUsuarioAventuraConditionInput): UsuarioAventura @aws_api_key @aws_iam
  updateUsuarioAventura(input: UpdateUsuarioAventuraInput!, condition: ModelUsuarioAventuraConditionInput): UsuarioAventura @aws_api_key @aws_iam
  deleteUsuarioAventura(input: DeleteUsuarioAventuraInput!, condition: ModelUsuarioAventuraConditionInput): UsuarioAventura @aws_api_key @aws_iam
  createAventura(input: CreateAventuraInput!, condition: ModelAventuraConditionInput): Aventura @aws_api_key @aws_iam
  updateAventura(input: UpdateAventuraInput!, condition: ModelAventuraConditionInput): Aventura @aws_api_key @aws_iam
  deleteAventura(input: DeleteAventuraInput!, condition: ModelAventuraConditionInput): Aventura @aws_api_key @aws_iam
  createReservaciones(input: CreateReservacionesInput!, condition: ModelReservacionesConditionInput): Reservaciones @aws_api_key @aws_iam
  updateReservaciones(input: UpdateReservacionesInput!, condition: ModelReservacionesConditionInput): Reservaciones @aws_api_key @aws_iam
  deleteReservaciones(input: DeleteReservacionesInput!, condition: ModelReservacionesConditionInput): Reservaciones @aws_api_key @aws_iam
  createFecha(input: CreateFechaInput!, condition: ModelFechaConditionInput): Fecha @aws_api_key @aws_iam
  updateFecha(input: UpdateFechaInput!, condition: ModelFechaConditionInput): Fecha @aws_api_key @aws_iam
  deleteFecha(input: DeleteFechaInput!, condition: ModelFechaConditionInput): Fecha @aws_api_key @aws_iam
  createCategoria(input: CreateCategoriaInput!, condition: ModelCategoriaConditionInput): Categoria @aws_api_key @aws_iam
  updateCategoria(input: UpdateCategoriaInput!, condition: ModelCategoriaConditionInput): Categoria @aws_api_key @aws_iam
  deleteCategoria(input: DeleteCategoriaInput!, condition: ModelCategoriaConditionInput): Categoria @aws_api_key @aws_iam
  createMessage(input: CreateMessageInput!, condition: ModelMessageConditionInput): Message @aws_api_key @aws_iam
  updateMessage(input: UpdateMessageInput!, condition: ModelMessageConditionInput): Message @aws_api_key @aws_iam
  deleteMessage(input: DeleteMessageInput!, condition: ModelMessageConditionInput): Message @aws_api_key @aws_iam
  createChatRoom(input: CreateChatRoomInput!, condition: ModelChatRoomConditionInput): ChatRoom @aws_api_key @aws_iam
  updateChatRoom(input: UpdateChatRoomInput!, condition: ModelChatRoomConditionInput): ChatRoom @aws_api_key @aws_iam
  deleteChatRoom(input: DeleteChatRoomInput!, condition: ModelChatRoomConditionInput): ChatRoom @aws_api_key @aws_iam
  createChatRoomUsuario(input: CreateChatRoomUsuarioInput!, condition: ModelChatRoomUsuarioConditionInput): ChatRoomUsuario @aws_api_key @aws_iam
  updateChatRoomUsuario(input: UpdateChatRoomUsuarioInput!, condition: ModelChatRoomUsuarioConditionInput): ChatRoomUsuario @aws_api_key @aws_iam
  deleteChatRoomUsuario(input: DeleteChatRoomUsuarioInput!, condition: ModelChatRoomUsuarioConditionInput): ChatRoomUsuario @aws_api_key @aws_iam
}

type PaymentIntent {
  clientSecret: String!
  id: String!
}

type AcountResult {
  url: String!
}

type RetrieveBalanceStripe {
  result: AWSJSON!
}

type Message @aws_iam @aws_api_key {
  id: ID!
  content: String!
  usuarioID: ID
  chatroomID: ID
  image: String
  audio: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type ChatRoom @aws_iam @aws_api_key {
  id: ID!
  name: String
  picture: String
  newMessages: Int
  lastMessage: String
  fechaID: ID
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  fecha: Fecha @aws_iam @aws_api_key
  LastMessage: Message @aws_iam @aws_api_key
  Messages(filter: ModelMessageFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelMessageConnection @aws_iam @aws_api_key
  usuarios(usuarioID: ModelIDKeyConditionInput, filter: ModelChatRoomUsuarioFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelChatRoomUsuarioConnection @aws_iam @aws_api_key
}

type ChatRoomUsuario @aws_iam @aws_api_key {
  id: ID!
  usuarioID: ID!
  chatroomID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  usuario: Usuario! @aws_iam @aws_api_key
  chatroom: ChatRoom! @aws_iam @aws_api_key
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelComentarioConnection @aws_api_key @aws_iam {
  items: [Comentario]
  nextToken: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelComentarioFilterInput {
  id: ModelIDInput
  calificacion: ModelFloatInput
  resena: ModelStringInput
  creadorID: ModelIDInput
  evaluadoID: ModelIDInput
  and: [ModelComentarioFilterInput]
  or: [ModelComentarioFilterInput]
  not: ModelComentarioFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getComentario(id: ID!): Comentario @aws_api_key @aws_iam
  listComentarios(filter: ModelComentarioFilterInput, limit: Int, nextToken: String): ModelComentarioConnection @aws_api_key @aws_iam
  getSolicitudGuia(id: ID!): SolicitudGuia @aws_api_key @aws_iam
  listSolicitudGuias(filter: ModelSolicitudGuiaFilterInput, limit: Int, nextToken: String): ModelSolicitudGuiaConnection @aws_api_key @aws_iam
  getUsuario(id: ID!): Usuario @aws_api_key @aws_iam
  listUsuarios(filter: ModelUsuarioFilterInput, limit: Int, nextToken: String): ModelUsuarioConnection @aws_api_key @aws_iam
  getAventura(id: ID!): Aventura @aws_api_key @aws_iam
  listAventuras(filter: ModelAventuraFilterInput, limit: Int, nextToken: String): ModelAventuraConnection @aws_api_key @aws_iam
  getReservaciones(id: ID!): Reservaciones @aws_api_key @aws_iam
  listReservaciones(filter: ModelReservacionesFilterInput, limit: Int, nextToken: String): ModelReservacionesConnection @aws_api_key @aws_iam
  getFecha(id: ID!): Fecha @aws_api_key @aws_iam
  listFechas(filter: ModelFechaFilterInput, limit: Int, nextToken: String): ModelFechaConnection @aws_api_key @aws_iam
  getCategoria(id: ID!): Categoria @aws_api_key @aws_iam
  listCategorias(filter: ModelCategoriaFilterInput, limit: Int, nextToken: String): ModelCategoriaConnection @aws_api_key @aws_iam
  getMessage(id: ID!): Message @aws_api_key @aws_iam
  listMessages(filter: ModelMessageFilterInput, limit: Int, nextToken: String): ModelMessageConnection @aws_api_key @aws_iam
  getChatRoom(id: ID!): ChatRoom @aws_api_key @aws_iam
  listChatRooms(filter: ModelChatRoomFilterInput, limit: Int, nextToken: String): ModelChatRoomConnection @aws_api_key @aws_iam
  getChatRoomUsuario(id: ID!): ChatRoomUsuario @aws_api_key @aws_iam
  listChatRoomUsuarios(filter: ModelChatRoomUsuarioFilterInput, limit: Int, nextToken: String): ModelChatRoomUsuarioConnection @aws_api_key @aws_iam
}

input CreateComentarioInput {
  id: ID
  calificacion: Float!
  resena: String
  creadorID: ID!
  evaluadoID: ID!
}

input UpdateComentarioInput {
  id: ID!
  calificacion: Float
  resena: String
  creadorID: ID
  evaluadoID: ID
}

input DeleteComentarioInput {
  id: ID!
}

input ModelComentarioConditionInput {
  calificacion: ModelFloatInput
  resena: ModelStringInput
  creadorID: ModelIDInput
  evaluadoID: ModelIDInput
  and: [ModelComentarioConditionInput]
  or: [ModelComentarioConditionInput]
  not: ModelComentarioConditionInput
}

type ModelSolicitudGuiaConnection @aws_api_key @aws_iam {
  items: [SolicitudGuia]
  nextToken: String
}

input ModelsolicitudAprovadaInput {
  eq: solicitudAprovada
  ne: solicitudAprovada
}

input ModelSolicitudGuiaFilterInput {
  id: ModelIDInput
  creadorID: ModelIDInput
  evaluadorID: ModelIDInput
  status: ModelsolicitudAprovadaInput
  comentarios: ModelStringInput
  and: [ModelSolicitudGuiaFilterInput]
  or: [ModelSolicitudGuiaFilterInput]
  not: ModelSolicitudGuiaFilterInput
}

input CreateSolicitudGuiaInput {
  id: ID
  creadorID: ID!
  evaluadorID: ID
  status: solicitudAprovada
  comentarios: String
}

input UpdateSolicitudGuiaInput {
  id: ID!
  creadorID: ID
  evaluadorID: ID
  status: solicitudAprovada
  comentarios: String
}

input DeleteSolicitudGuiaInput {
  id: ID!
}

input ModelSolicitudGuiaConditionInput {
  creadorID: ModelIDInput
  evaluadorID: ModelIDInput
  status: ModelsolicitudAprovadaInput
  comentarios: ModelStringInput
  and: [ModelSolicitudGuiaConditionInput]
  or: [ModelSolicitudGuiaConditionInput]
  not: ModelSolicitudGuiaConditionInput
}

input CreateSolicitudAventuraInput {
  id: ID
  aventuraID: ID!
  solicitudID: ID!
}

input UpdateSolicitudAventuraInput {
  id: ID!
  aventuraID: ID
  solicitudID: ID
}

input DeleteSolicitudAventuraInput {
  id: ID!
}

input ModelSolicitudAventuraConditionInput {
  aventuraID: ModelIDInput
  solicitudID: ModelIDInput
  and: [ModelSolicitudAventuraConditionInput]
  or: [ModelSolicitudAventuraConditionInput]
  not: ModelSolicitudAventuraConditionInput
}

type ModelUsuarioConnection @aws_api_key @aws_iam {
  items: [Usuario]
  nextToken: String
}

input ModeltipoUsuarioInput {
  eq: tipoUsuario
  ne: tipoUsuario
}

input ModelUsuarioFilterInput {
  id: ModelIDInput
  nombre: ModelStringInput
  apellido: ModelStringInput
  foto: ModelStringInput
  nickname: ModelStringInput
  calificacion: ModelFloatInput
  descripcion: ModelStringInput
  comentarios: ModelStringInput
  tipo: ModeltipoUsuarioInput
  selfie: ModelStringInput
  INE: ModelStringInput
  licencia: ModelStringInput
  comentariosAdicionales: ModelStringInput
  telefono: ModelStringInput
  capacidadMaxima: ModelIntInput
  placaVehiculos: ModelStringInput
  tarjetaCirculacion: ModelStringInput
  certificaciones: ModelStringInput
  sitioWeb: ModelStringInput
  redSocial: ModelStringInput
  stripeID: ModelStringInput
  and: [ModelUsuarioFilterInput]
  or: [ModelUsuarioFilterInput]
  not: ModelUsuarioFilterInput
}

input CreateUsuarioInput {
  id: ID
  nombre: String
  apellido: String
  foto: String
  nickname: String!
  calificacion: Float
  descripcion: String
  comentarios: [String]
  tipo: tipoUsuario
  selfie: String
  INE: [String]
  licencia: [String]
  comentariosAdicionales: String
  telefono: String
  capacidadMaxima: Int
  placaVehiculos: [String]
  tarjetaCirculacion: String
  certificaciones: [String]
  sitioWeb: String
  redSocial: String
  stripeID: String
}

input UpdateUsuarioInput {
  id: ID!
  nombre: String
  apellido: String
  foto: String
  nickname: String
  calificacion: Float
  descripcion: String
  comentarios: [String]
  tipo: tipoUsuario
  selfie: String
  INE: [String]
  licencia: [String]
  comentariosAdicionales: String
  telefono: String
  capacidadMaxima: Int
  placaVehiculos: [String]
  tarjetaCirculacion: String
  certificaciones: [String]
  sitioWeb: String
  redSocial: String
  stripeID: String
}

input DeleteUsuarioInput {
  id: ID!
}

input ModelUsuarioConditionInput {
  nombre: ModelStringInput
  apellido: ModelStringInput
  foto: ModelStringInput
  nickname: ModelStringInput
  calificacion: ModelFloatInput
  descripcion: ModelStringInput
  comentarios: ModelStringInput
  tipo: ModeltipoUsuarioInput
  selfie: ModelStringInput
  INE: ModelStringInput
  licencia: ModelStringInput
  comentariosAdicionales: ModelStringInput
  telefono: ModelStringInput
  capacidadMaxima: ModelIntInput
  placaVehiculos: ModelStringInput
  tarjetaCirculacion: ModelStringInput
  certificaciones: ModelStringInput
  sitioWeb: ModelStringInput
  redSocial: ModelStringInput
  stripeID: ModelStringInput
  and: [ModelUsuarioConditionInput]
  or: [ModelUsuarioConditionInput]
  not: ModelUsuarioConditionInput
}

input CreateUsuarioAventuraInput {
  id: ID
  aventuraID: ID!
  usuarioID: ID!
  bloqueado: Boolean
}

input UpdateUsuarioAventuraInput {
  id: ID!
  aventuraID: ID
  usuarioID: ID
  bloqueado: Boolean
}

input DeleteUsuarioAventuraInput {
  id: ID!
}

input ModelUsuarioAventuraConditionInput {
  aventuraID: ModelIDInput
  usuarioID: ModelIDInput
  bloqueado: ModelBooleanInput
  and: [ModelUsuarioAventuraConditionInput]
  or: [ModelUsuarioAventuraConditionInput]
  not: ModelUsuarioAventuraConditionInput
}

type ModelAventuraConnection @aws_api_key @aws_iam {
  items: [Aventura]
  nextToken: String
}

input ModelAventuraFilterInput {
  id: ModelIDInput
  titulo: ModelStringInput
  imagenFondo: ModelStringInput
  imagenDetalle: ModelStringInput
  precioMin: ModelIntInput
  precioMax: ModelIntInput
  duracion: ModelStringInput
  descripcionCorta: ModelStringInput
  descripcionLarga: ModelStringInput
  materialObligatorio: ModelStringInput
  materialOpcional: ModelStringInput
  materialAcampada: ModelStringInput
  alimentacion: ModelStringInput
  materialIncluido: ModelStringInput
  dificultad: ModelFloatInput
  precioVIP: ModelIntInput
  descripcionVIP: ModelStringInput
  fechaInicialDisponible: ModelStringInput
  fechaFinalDisponible: ModelStringInput
  categoriaID: ModelIDInput
  ubicacionNombre: ModelStringInput
  ubicacionLink: ModelStringInput
  comision: ModelFloatInput
  and: [ModelAventuraFilterInput]
  or: [ModelAventuraFilterInput]
  not: ModelAventuraFilterInput
}

input CreateAventuraInput {
  id: ID
  titulo: String!
  imagenFondo: String!
  imagenDetalle: [String!]!
  precioMin: Int!
  precioMax: Int!
  duracion: String!
  descripcionCorta: String!
  descripcionLarga: String!
  materialObligatorio: [String!]
  materialOpcional: [String!]
  materialAcampada: [String!]
  alimentacion: [String!]
  materialIncluido: [String!]
  dificultad: Float!
  precioVIP: Int
  descripcionVIP: String
  fechaInicialDisponible: String
  fechaFinalDisponible: String
  categoriaID: ID
  ubicacionNombre: String
  ubicacionLink: String
  comision: Float!
}

input UpdateAventuraInput {
  id: ID!
  titulo: String
  imagenFondo: String
  imagenDetalle: [String!]
  precioMin: Int
  precioMax: Int
  duracion: String
  descripcionCorta: String
  descripcionLarga: String
  materialObligatorio: [String!]
  materialOpcional: [String!]
  materialAcampada: [String!]
  alimentacion: [String!]
  materialIncluido: [String!]
  dificultad: Float
  precioVIP: Int
  descripcionVIP: String
  fechaInicialDisponible: String
  fechaFinalDisponible: String
  categoriaID: ID
  ubicacionNombre: String
  ubicacionLink: String
  comision: Float
}

input DeleteAventuraInput {
  id: ID!
}

input ModelAventuraConditionInput {
  titulo: ModelStringInput
  imagenFondo: ModelStringInput
  imagenDetalle: ModelStringInput
  precioMin: ModelIntInput
  precioMax: ModelIntInput
  duracion: ModelStringInput
  descripcionCorta: ModelStringInput
  descripcionLarga: ModelStringInput
  materialObligatorio: ModelStringInput
  materialOpcional: ModelStringInput
  materialAcampada: ModelStringInput
  alimentacion: ModelStringInput
  materialIncluido: ModelStringInput
  dificultad: ModelFloatInput
  precioVIP: ModelIntInput
  descripcionVIP: ModelStringInput
  fechaInicialDisponible: ModelStringInput
  fechaFinalDisponible: ModelStringInput
  categoriaID: ModelIDInput
  ubicacionNombre: ModelStringInput
  ubicacionLink: ModelStringInput
  comision: ModelFloatInput
  and: [ModelAventuraConditionInput]
  or: [ModelAventuraConditionInput]
  not: ModelAventuraConditionInput
}

type ModelReservacionesConnection @aws_api_key @aws_iam {
  items: [Reservaciones]
  nextToken: String
}

input ModelReservacionesFilterInput {
  id: ModelIDInput
  total: ModelFloatInput
  comisionPorPersona: ModelFloatInput
  personas: ModelIntInput
  tercera: ModelIntInput
  adultos: ModelIntInput
  ninos: ModelIntInput
  fechaID: ModelIDInput
  usuarioID: ModelIDInput
  idPago: ModelStringInput
  and: [ModelReservacionesFilterInput]
  or: [ModelReservacionesFilterInput]
  not: ModelReservacionesFilterInput
}

input CreateReservacionesInput {
  id: ID
  total: Float!
  comisionPorPersona: Float!
  personas: Int!
  tercera: Int
  adultos: Int
  ninos: Int
  fechaID: ID!
  usuarioID: ID!
  idPago: String!
}

input UpdateReservacionesInput {
  id: ID!
  total: Float
  comisionPorPersona: Float
  personas: Int
  tercera: Int
  adultos: Int
  ninos: Int
  fechaID: ID
  usuarioID: ID
  idPago: String
}

input DeleteReservacionesInput {
  id: ID!
}

input ModelReservacionesConditionInput {
  total: ModelFloatInput
  comisionPorPersona: ModelFloatInput
  personas: ModelIntInput
  tercera: ModelIntInput
  adultos: ModelIntInput
  ninos: ModelIntInput
  fechaID: ModelIDInput
  usuarioID: ModelIDInput
  idPago: ModelStringInput
  and: [ModelReservacionesConditionInput]
  or: [ModelReservacionesConditionInput]
  not: ModelReservacionesConditionInput
}

type ModelFechaConnection @aws_api_key @aws_iam {
  items: [Fecha]
  nextToken: String
}

input ModelFechaFilterInput {
  id: ModelIDInput
  personasTotales: ModelIntInput
  fechaInicial: ModelStringInput
  fechaFinal: ModelStringInput
  precio: ModelIntInput
  comision: ModelFloatInput
  aventuraID: ModelIDInput
  guiaID: ModelIDInput
  itinerario: ModelStringInput
  ubicacionNombre: ModelStringInput
  ubicacionLink: ModelStringInput
  denyTercera: ModelBooleanInput
  denyNinos: ModelBooleanInput
  materialObligatorio: ModelStringInput
  materialOpcional: ModelStringInput
  materialAcampada: ModelStringInput
  alimentacion: ModelStringInput
  materialIncluido: ModelStringInput
  chatroomID: ModelIDInput
  and: [ModelFechaFilterInput]
  or: [ModelFechaFilterInput]
  not: ModelFechaFilterInput
}

input CreateFechaInput {
  id: ID
  personasTotales: Int!
  fechaInicial: String!
  fechaFinal: String!
  precio: Int!
  comision: Float!
  aventuraID: ID!
  guiaID: ID!
  itinerario: [AWSJSON]
  ubicacionNombre: String
  ubicacionLink: String
  denyTercera: Boolean
  denyNinos: Boolean
  materialObligatorio: [String]
  materialOpcional: [String]
  materialAcampada: [String]
  alimentacion: [String]
  materialIncluido: [String]
  chatroomID: ID!
}

input UpdateFechaInput {
  id: ID!
  personasTotales: Int
  fechaInicial: String
  fechaFinal: String
  precio: Int
  comision: Float
  aventuraID: ID
  guiaID: ID
  itinerario: [AWSJSON]
  ubicacionNombre: String
  ubicacionLink: String
  denyTercera: Boolean
  denyNinos: Boolean
  materialObligatorio: [String]
  materialOpcional: [String]
  materialAcampada: [String]
  alimentacion: [String]
  materialIncluido: [String]
  chatroomID: ID
}

input DeleteFechaInput {
  id: ID!
}

input ModelFechaConditionInput {
  personasTotales: ModelIntInput
  fechaInicial: ModelStringInput
  fechaFinal: ModelStringInput
  precio: ModelIntInput
  comision: ModelFloatInput
  aventuraID: ModelIDInput
  guiaID: ModelIDInput
  itinerario: ModelStringInput
  ubicacionNombre: ModelStringInput
  ubicacionLink: ModelStringInput
  denyTercera: ModelBooleanInput
  denyNinos: ModelBooleanInput
  materialObligatorio: ModelStringInput
  materialOpcional: ModelStringInput
  materialAcampada: ModelStringInput
  alimentacion: ModelStringInput
  materialIncluido: ModelStringInput
  chatroomID: ModelIDInput
  and: [ModelFechaConditionInput]
  or: [ModelFechaConditionInput]
  not: ModelFechaConditionInput
}

type ModelCategoriaConnection @aws_api_key @aws_iam {
  items: [Categoria]
  nextToken: String
}

input ModelCategoriaFilterInput {
  id: ModelIDInput
  titulo: ModelStringInput
  foto: ModelStringInput
  and: [ModelCategoriaFilterInput]
  or: [ModelCategoriaFilterInput]
  not: ModelCategoriaFilterInput
}

input CreateCategoriaInput {
  id: ID
  titulo: String!
  foto: String!
}

input UpdateCategoriaInput {
  id: ID!
  titulo: String
  foto: String
}

input DeleteCategoriaInput {
  id: ID!
}

input ModelCategoriaConditionInput {
  titulo: ModelStringInput
  foto: ModelStringInput
  and: [ModelCategoriaConditionInput]
  or: [ModelCategoriaConditionInput]
  not: ModelCategoriaConditionInput
}

type ModelMessageConnection @aws_api_key @aws_iam {
  items: [Message]
  nextToken: String
}

input ModelMessageFilterInput {
  id: ModelIDInput
  content: ModelStringInput
  usuarioID: ModelIDInput
  chatroomID: ModelIDInput
  image: ModelStringInput
  audio: ModelStringInput
  and: [ModelMessageFilterInput]
  or: [ModelMessageFilterInput]
  not: ModelMessageFilterInput
}

input CreateMessageInput {
  id: ID
  content: String!
  usuarioID: ID
  chatroomID: ID
  image: String
  audio: String
}

input UpdateMessageInput {
  id: ID!
  content: String
  usuarioID: ID
  chatroomID: ID
  image: String
  audio: String
}

input DeleteMessageInput {
  id: ID!
}

input ModelMessageConditionInput {
  content: ModelStringInput
  usuarioID: ModelIDInput
  chatroomID: ModelIDInput
  image: ModelStringInput
  audio: ModelStringInput
  and: [ModelMessageConditionInput]
  or: [ModelMessageConditionInput]
  not: ModelMessageConditionInput
}

type ModelChatRoomConnection @aws_api_key @aws_iam {
  items: [ChatRoom]
  nextToken: String
}

input ModelChatRoomFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  picture: ModelStringInput
  newMessages: ModelIntInput
  lastMessage: ModelStringInput
  fechaID: ModelIDInput
  and: [ModelChatRoomFilterInput]
  or: [ModelChatRoomFilterInput]
  not: ModelChatRoomFilterInput
}

input CreateChatRoomInput {
  id: ID
  name: String
  picture: String
  newMessages: Int
  lastMessage: String
  fechaID: ID
  chatRoomLastMessageId: ID
}

input UpdateChatRoomInput {
  id: ID!
  name: String
  picture: String
  newMessages: Int
  lastMessage: String
  fechaID: ID
  chatRoomLastMessageId: ID
}

input DeleteChatRoomInput {
  id: ID!
}

input ModelChatRoomConditionInput {
  name: ModelStringInput
  picture: ModelStringInput
  newMessages: ModelIntInput
  lastMessage: ModelStringInput
  fechaID: ModelIDInput
  and: [ModelChatRoomConditionInput]
  or: [ModelChatRoomConditionInput]
  not: ModelChatRoomConditionInput
}

type ModelChatRoomUsuarioConnection @aws_api_key @aws_iam {
  items: [ChatRoomUsuario]
  nextToken: String
}

input ModelChatRoomUsuarioFilterInput {
  id: ModelIDInput
  usuarioID: ModelIDInput
  chatroomID: ModelIDInput
  and: [ModelChatRoomUsuarioFilterInput]
  or: [ModelChatRoomUsuarioFilterInput]
  not: ModelChatRoomUsuarioFilterInput
}

input CreateChatRoomUsuarioInput {
  id: ID
  usuarioID: ID!
  chatroomID: ID!
}

input UpdateChatRoomUsuarioInput {
  id: ID!
  usuarioID: ID
  chatroomID: ID
}

input DeleteChatRoomUsuarioInput {
  id: ID!
}

input ModelChatRoomUsuarioConditionInput {
  usuarioID: ModelIDInput
  chatroomID: ModelIDInput
  and: [ModelChatRoomUsuarioConditionInput]
  or: [ModelChatRoomUsuarioConditionInput]
  not: ModelChatRoomUsuarioConditionInput
}

input ModelIDKeyConditionInput {
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  between: [ID]
  beginsWith: ID
}

type ModelSolicitudAventuraConnection @aws_iam @aws_api_key {
  items: [SolicitudAventura]
  nextToken: String
}

input ModelSolicitudAventuraFilterInput {
  id: ModelIDInput
  aventuraID: ModelIDInput
  solicitudID: ModelIDInput
  and: [ModelSolicitudAventuraFilterInput]
  or: [ModelSolicitudAventuraFilterInput]
  not: ModelSolicitudAventuraFilterInput
}

type ModelUsuarioAventuraConnection @aws_iam @aws_api_key {
  items: [UsuarioAventura]
  nextToken: String
}

input ModelUsuarioAventuraFilterInput {
  id: ModelIDInput
  aventuraID: ModelIDInput
  usuarioID: ModelIDInput
  bloqueado: ModelBooleanInput
  and: [ModelUsuarioAventuraFilterInput]
  or: [ModelUsuarioAventuraFilterInput]
  not: ModelUsuarioAventuraFilterInput
}
