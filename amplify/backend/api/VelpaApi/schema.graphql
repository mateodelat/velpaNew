type Aventura @model @auth(rules: [{allow: private, operations: [read]}, {allow: owner}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}]) {
  id: ID!
  titulo: String!
  imagenFondoIdx: Int!
  imagenDetalle: [String]!
  precioMin: Int!
  precioMax: Int!
  duracion: String
  descripcion: String
  dificultad: Float!
  ubicacionNombre: String
  ubicacionLink: AWSURL
  comision: Float!
  estadoAventura: EstadoAventura!
  coordenadas: AWSJSON!
  altitud: Float
  distanciaRecorrida: Float
  altimetriaRecorrida: Float
  categoria: Categorias
  SolicitudGuias: [AventuraSolicitudGuia] @connection(keyName: "byAventura", fields: ["id"])
  UsuariosAutorizados: [AventuraUsuario] @connection(keyName: "byAventura", fields: ["id"])
  Fechas: [Fecha] @connection(keyName: "byAventura", fields: ["id"])
  puntoReunionNombre: String
  puntoReunionLink: AWSURL
  materialDefault: String
  incluidoDefault: [String]
}

type Reserva @model @key(name: "byFecha", fields: ["fechaID"]) @key(name: "byUsuario", fields: ["usuarioID"]) @auth(rules: [{allow: private, operations: [read]}, {allow: owner}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}]) {
  id: ID!
  total: Float!
  comisionPorPersona: Float!
  tercera: Int!
  ninos: Int!
  adultos: Int!
  pagoID: String!
  fechaID: ID
  usuarioID: ID
}

type Fecha @model @key(name: "byAventura", fields: ["aventuraID"]) @key(name: "byUsuario", fields: ["usuarioID"]) @auth(rules: [{allow: private, operations: [read]}, {allow: owner}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}]) {
  id: ID!
  personasTotales: Int!
  fechaInicial: AWSTimestamp!
  fechaFinal: AWSTimestamp!
  precio: Float!
  comision: Float!
  itinerario: String!
  puntoReunionNombre: String!
  puntoReunionLink: String!
  allowTercera: Boolean!
  allowNinos: Boolean!
  material: String
  incluido: String!
  aventuraID: ID
  Reservas: [Reserva] @connection(keyName: "byFecha", fields: ["id"])
  usuarioID: ID
  titulo: String
  descripcion: String
  imagenRuta: String
}

type Usuario @model @auth(rules: [{allow: public, operations: [create]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: owner, ownerField: "owner"}]) {
  id: ID!
  nombre: String
  apellido: String
  foto: String
  nickname: String
  calificacion: Float
  tipo: TipoUsuario
  selfie: String
  INE: [String]
  licencia: [String]
  comentariosAdicionales: String
  telefono: AWSPhone
  capacidadMaxima: Int
  tarjetaCirculacion: String
  certificaciones: [String]
  sitioWeb: AWSURL
  usuarioRedSocial: String
  stripeID: String
  owner: String
  AventurasAutorizadas: [AventuraUsuario] @connection(keyName: "byUsuario", fields: ["id"])
  Mensajes: [Mensaje] @connection(keyName: "byUsuario", fields: ["id"])
  ChatRooms: [ChatRoomUsuario] @connection(keyName: "byUsuario", fields: ["id"])
  Reservas: [Reserva] @connection(keyName: "byUsuario", fields: ["id"])
  Fechas: [Fecha] @connection(keyName: "byUsuario", fields: ["id"])
  SolicitudesEvaluadas: [SolicitudGuia] @connection(keyName: "byUsuario", fields: ["id"])
}

type ChatRoom @model @auth(rules: [{allow: public, operations: [read]}, {allow: private}]) {
  id: ID!
  name: String!
  picture: String
  newMessages: Int!
  lastMessage: String
  Mensajes: [Mensaje] @connection(keyName: "byChatRoom", fields: ["id"])
  Participantes: [ChatRoomUsuario] @connection(keyName: "byChatRoom", fields: ["id"])
  Fecha: Fecha @connection
}

type Mensaje @model @key(name: "byUsuario", fields: ["usuarioID"]) @key(name: "byChatRoom", fields: ["chatroomID"]) @auth(rules: [{allow: owner, operations: [create, update, delete]}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}]) {
  id: ID!
  content: String!
  usuarioID: ID
  chatroomID: ID
}

type SolicitudGuia @model @auth(rules: [{allow: owner}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}]) @key(name: "byUsuario", fields: ["evaluadorID"]) {
  id: ID!
  status: StatusSolicitud!
  comentarios: String
  Aventuras: [AventuraSolicitudGuia] @connection(keyName: "bySolicitudGuia", fields: ["id"])
  evaluadorID: ID
}

enum EstadoAventura {
  AUTORIZADO
  PENDIENTE
  RECHAZADO
}

enum Categorias {
  APLINISMO
  MTB
  OTROS
}

enum StatusSolicitud {
  APROVADA
  PENDIENTE
  RECHAZADA
}

enum TipoUsuario {
  AGENCIA
  GUIAINDIVIDUAL
}

type AventuraSolicitudGuia @model(queries: null) @key(name: "byAventura", fields: ["aventuraID", "solicitudguiaID"]) @key(name: "bySolicitudGuia", fields: ["solicitudguiaID", "aventuraID"]) @auth(rules: [{allow: private, operations: [read]}, {allow: owner}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: owner}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}]) {
  id: ID!
  aventuraID: ID!
  solicitudguiaID: ID!
  aventura: Aventura! @connection(fields: ["aventuraID"])
  solicitudguia: SolicitudGuia! @connection(fields: ["solicitudguiaID"])
}

type AventuraUsuario @model(queries: null) @key(name: "byAventura", fields: ["aventuraID", "usuarioID"]) @key(name: "byUsuario", fields: ["usuarioID", "aventuraID"]) @auth(rules: [{allow: private, operations: [read]}, {allow: owner}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: owner}]) {
  id: ID!
  aventuraID: ID!
  usuarioID: ID!
  aventura: Aventura! @connection(fields: ["aventuraID"])
  usuario: Usuario! @connection(fields: ["usuarioID"])
}

type ChatRoomUsuario @model(queries: null) @key(name: "byChatRoom", fields: ["chatroomID", "usuarioID"]) @key(name: "byUsuario", fields: ["usuarioID", "chatroomID"]) @auth(rules: [{allow: public, operations: [read]}, {allow: private}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: owner}]) {
  id: ID!
  chatroomID: ID!
  usuarioID: ID!
  chatroom: ChatRoom! @connection(fields: ["chatroomID"])
  usuario: Usuario! @connection(fields: ["usuarioID"])
}
 